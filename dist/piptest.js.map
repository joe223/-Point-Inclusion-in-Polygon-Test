{"version":3,"file":"piptest.js","sources":["../lib/index.js"],"sourcesContent":["// import { chinaArr, hainanArr, chongmingArr } from \"./polygon.js\";\n\nclass PIPtest {\n    constructor ( arr ) {\n        this.arr = arr;\n        if ( !arr || !arr.length || arr.length < 3 ) {\n            throw new Error( \"[error] arr's length must large than 3\");\n        }\n        this.test = function( point ) {\n            let arr = this.arr;\n            let result = false;\n            let maxLat = arr[0].lat;\n            let maxLng = arr[0].lng;\n            let minLat = arr[0].lat;\n            let minLng = arr[0].lng;\n            let len = arr.length;\n\n            this.arr.map( ( item, index ) => {\n                if ( item.lat > maxLat ) {\n                    maxLat = item.lat;\n                } else if ( item.lat < minLat ) {\n                    minLat = item.lat;\n                }\n                if ( item.lng > maxLng ) {\n                    maxLng = item.lng;\n                } else if ( item.lng < minLng ) {\n                    minLng = item.lng;\n                }\n            });\n            // console.log(maxLat);\n            // console.log(maxLng);\n            // console.log(minLat);\n            // console.log(minLng);\n            // console.log(\"============\\n\");\n            if ( point.lat >= minLat &&\n                point.lat <= maxLat &&\n                point.lng >= minLng &&\n                point.lng <= maxLng\n            ) {\n                for ( let next = 0, prev = len - 1; next < len; prev = next++ ) {\n                    if (\n                        ( ( arr[next].lng > point.lng ) !== ( arr[prev].lng > point.lng ) ) &&\n                        (point.lat < ( arr[next].lat - arr[prev].lat )*( point.lng - arr[prev].lng )/(arr[next].lng - arr[prev].lng) + arr[prev].lat)\n                    ) {\n                        result = !result;\n                    }\n                }\n            }\n            return result;\n        }\n    }\n\n}\n\nexport default PIPtest;\n"],"names":["PIPtest","arr","length","Error","test","point","result","maxLat","lat","maxLng","lng","minLat","minLng","len","map","item","index","next","prev"],"mappings":";;;;;;;;;;;;AAAA;;IAEMA,UACF,iBAAcC,GAAd,EAAoB;;;SACXA,GAAL,GAAWA,GAAX;QACK,CAACA,GAAD,IAAQ,CAACA,IAAIC,MAAb,IAAuBD,IAAIC,MAAJ,GAAa,CAAzC,EAA6C;cACnC,IAAIC,KAAJ,CAAW,wCAAX,CAAN;;SAECC,IAAL,GAAY,UAAUC,KAAV,EAAkB;YACtBJ,MAAM,KAAKA,GAAf;YACIK,SAAS,KAAb;YACIC,SAASN,IAAI,CAAJ,EAAOO,GAApB;YACIC,SAASR,IAAI,CAAJ,EAAOS,GAApB;YACIC,SAASV,IAAI,CAAJ,EAAOO,GAApB;YACII,SAASX,IAAI,CAAJ,EAAOS,GAApB;YACIG,MAAMZ,IAAIC,MAAd;;aAEKD,GAAL,CAASa,GAAT,CAAc,UAAEC,IAAF,EAAQC,KAAR,EAAmB;gBACxBD,KAAKP,GAAL,GAAWD,MAAhB,EAAyB;yBACZQ,KAAKP,GAAd;aADJ,MAEO,IAAKO,KAAKP,GAAL,GAAWG,MAAhB,EAAyB;yBACnBI,KAAKP,GAAd;;gBAECO,KAAKL,GAAL,GAAWD,MAAhB,EAAyB;yBACZM,KAAKL,GAAd;aADJ,MAEO,IAAKK,KAAKL,GAAL,GAAWE,MAAhB,EAAyB;yBACnBG,KAAKL,GAAd;;SATR;;;;;;YAiBKL,MAAMG,GAAN,IAAaG,MAAb,IACDN,MAAMG,GAAN,IAAaD,MADZ,IAEDF,MAAMK,GAAN,IAAaE,MAFZ,IAGDP,MAAMK,GAAN,IAAaD,MAHjB,EAIE;iBACQ,IAAIQ,OAAO,CAAX,EAAcC,OAAOL,MAAM,CAAjC,EAAoCI,OAAOJ,GAA3C,EAAgDK,OAAOD,MAAvD,EAAgE;oBAEpDhB,IAAIgB,IAAJ,EAAUP,GAAV,GAAgBL,MAAMK,GAAxB,KAAoCT,IAAIiB,IAAJ,EAAUR,GAAV,GAAgBL,MAAMK,GAA5D,IACCL,MAAMG,GAAN,GAAY,CAAEP,IAAIgB,IAAJ,EAAUT,GAAV,GAAgBP,IAAIiB,IAAJ,EAAUV,GAA5B,KAAoCH,MAAMK,GAAN,GAAYT,IAAIiB,IAAJ,EAAUR,GAA1D,KAAiET,IAAIgB,IAAJ,EAAUP,GAAV,GAAgBT,IAAIiB,IAAJ,EAAUR,GAA3F,IAAkGT,IAAIiB,IAAJ,EAAUV,GAF7H,EAGE;6BACW,CAACF,MAAV;;;;eAILA,MAAP;KAxCJ;EA8CR;;;;"}